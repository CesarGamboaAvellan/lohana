{"version":3,"sources":["1.jpg","2.jpg","3.jpg","4.jpg","5.jpg","index.js"],"names":["module","exports","__webpack_require__","p","cards","One","Two","Three","Four","Five","reverse","to","i","x","y","scale","rot","Math","random","delay","from","trans","r","s","concat","Deck","_useState","useState","Set","gone","Object","_Users_ff_cesar_Documents_stupid_stuff_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_useSprings","useSprings","length","_Users_ff_cesar_Documents_stupid_stuff_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_useSprings2","props","set","bind","useGesture","_ref","index","args","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","map","_ref2","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","react_spring__WEBPACK_IMPORTED_MODULE_4__","div","key","style","transform","interpolate","assign","backgroundImage","render","document","getElementById"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wPCWlCC,EAAQ,CACVC,IACAC,IACAC,IACAC,IACAC,KAEJL,EAAMM,UAGN,IAAMC,EAAK,SAAAC,GAAC,MAAK,CAAEC,EAAG,EAAGC,GAAQ,EAALF,EAAQG,MAAO,EAAGC,IAA2B,GAAhBC,KAAKC,SAAV,GAAyBC,MAAW,IAAJP,IAC9EQ,EAAO,SAAAR,GAAC,MAAK,CAAEC,EAAG,EAAGG,IAAK,EAAGD,MAAO,IAAKD,GAAI,MAE7CO,EAAQ,SAACC,EAAGC,GAAJ,oDAAAC,OAAwDF,EAAI,GAA5D,iBAAAE,OAA8EF,EAA9E,eAAAE,OAA6FD,EAA7F,MAEd,SAASE,IAAO,IAAAC,EACGC,mBAAS,kBAAM,IAAIC,MAA3BC,EADKC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,MAAAM,EAESC,YAAW7B,EAAM8B,OAAQ,SAAAtB,GAAC,OAAAkB,OAAAK,EAAA,EAAAL,CAAA,GAAUnB,EAAGC,GAAb,CAAiBQ,KAAMA,EAAKR,OAF/DwB,EAAAN,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAELK,EAFKD,EAAA,GAEEE,EAFFF,EAAA,GAING,EAAOC,YAAW,SAAAC,GAAqF,IAA3EC,EAA2EZ,OAAAC,EAAA,EAAAD,CAAAW,EAAlFE,KAAkF,MAAnEC,EAAmEH,EAAnEG,KAAcC,EAAqDf,OAAAC,EAAA,EAAAD,CAAAW,EAA7DK,MAA6D,MAAtBC,GAAsBN,EAA5CO,SAA4ClB,OAAAC,EAAA,EAAAD,CAAAW,EAAlCQ,UAAkC,OAAfC,EAAeT,EAAfS,SAEpFC,EAAMJ,EAAO,GAAK,EAAI,GACvBH,GAFWM,EAAW,IAELrB,EAAKuB,IAAIV,GAC/BJ,EAAI,SAAA1B,GACA,GAAI8B,IAAU9B,EAAd,CACA,IAAMyC,EAASxB,EAAKyB,IAAIZ,GAIxB,MAAO,CAAE7B,EAHCwC,GAAU,IAAME,OAAOC,YAAcL,EAAMP,EAAOC,EAAS,EAGzD7B,IAFA6B,EAAS,KAAOQ,EAAe,GAANF,EAAWD,EAAW,GAE1CnC,MADH6B,EAAO,IAAM,EACHzB,WAAOsC,EAAWC,OAAQ,CAAEC,SAAU,GAAIC,QAAShB,EAAO,IAAMS,EAAS,IAAM,SAEtGT,GAAQf,EAAKgC,OAASzD,EAAM8B,QAAQ4B,WAAW,kBAAMjC,EAAKkC,SAAWzB,EAAI,SAAA1B,GAAC,OAAID,EAAGC,MAAK,OAG/F,OAAOyB,EAAM2B,IAAI,SAAAC,EAAuBrD,GAAvB,IAAGC,EAAHoD,EAAGpD,EAAGC,EAANmD,EAAMnD,EAAGE,EAATiD,EAASjD,IAAKD,EAAdkD,EAAclD,MAAd,OACbmD,EAAAC,EAAAC,cAACC,EAAA,EAASC,IAAV,CAAcC,IAAK3D,EAAG4D,MAAO,CAAEC,UAAWC,YAAY,CAAC7D,EAAGC,GAAI,SAACD,EAAGC,GAAJ,qBAAAU,OAAyBX,EAAzB,OAAAW,OAAgCV,EAAhC,aAE1DoD,EAAAC,EAAAC,cAACC,EAAA,EAASC,IAAVxC,OAAA6C,OAAA,GAAkBpC,EAAK3B,GAAvB,CAA2B4D,MAAO,CAAEC,UAAWC,YAAY,CAAC1D,EAAKD,GAAQM,GAAQuD,gBAAe,OAAApD,OAASpB,EAAMQ,GAAf,YAK5GiE,iBAAOX,EAAAC,EAAAC,cAAC3C,EAAD,MAAUqD,SAASC,eAAe","file":"static/js/main.3b5443f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.049e64cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.27e10390.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.f074fa5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.eaa43e13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.d4896665.jpg\";","import { render } from 'react-dom'\nimport React, { useState } from 'react'\nimport { useSprings, animated, interpolate } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport './styles.css'\nimport One from '../src/1.jpg'\nimport Two from '../src/2.jpg';\nimport Three from '../src/3.jpg';\nimport Four from '../src/4.jpg';\nimport Five from '../src/5.jpg';\n\nconst cards = [\n    One,\n    Two,\n    Three,\n    Four,\n    Five\n]\ncards.reverse();\n\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\nconst to = i => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\nconst from = i => ({ x: 0, rot: 0, scale: 1.5, y: -1000 })\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\n\nfunction Deck() {\n    const [gone] = useState(() => new Set()) // The set flags all the cards that are flicked out\n    const [props, set] = useSprings(cards.length, i => ({ ...to(i), from: from(i) })) // Create a bunch of springs using the helpers above\n    // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n    const bind = useGesture(({ args: [index], down, delta: [xDelta], distance, direction: [xDir], velocity }) => {\n        const trigger = velocity > 0.2 // If you flick hard enough it should trigger the card to fly out\n        const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\n        if (!down && trigger) gone.add(index) // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n        set(i => {\n            if (index !== i) return // We're only interested in changing spring-data for the current spring\n            const isGone = gone.has(index)\n            const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\n            const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\n            const scale = down ? 1.1 : 1 // Active cards lift up a bit\n            return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n        })\n        if (!down && gone.size === cards.length) setTimeout(() => gone.clear() || set(i => to(i)), 600)\n    })\n    // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n    return props.map(({ x, y, rot, scale }, i) => (\n        <animated.div key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\n            {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\n            <animated.div {...bind(i)} style={{ transform: interpolate([rot, scale], trans), backgroundImage: `url(${cards[i]})` }} />\n        </animated.div>\n    ))\n}\n\nrender(<Deck />, document.getElementById('root'))\n"],"sourceRoot":""}